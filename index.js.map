{"version":3,"file":"index.js","sources":["../src/ts/dom-elements.ts","../src/ts/theme-and-fonts.ts","../src/ts/result-builder.ts","../src/ts/index.ts"],"sourcesContent":["interface DomObj {\r\n    body: HTMLBodyElement\r\n    logoUse: SVGUseElement\r\n    loader: HTMLDivElement\r\n    inputErrMessage: HTMLParagraphElement\r\n    dayNightCheckbox: HTMLInputElement\r\n    fontSelectorBackdrop: HTMLDivElement\r\n    fontsSelectWindow: HTMLUListElement\r\n    fontOpenBtn: HTMLButtonElement\r\n    selectedFont: HTMLParagraphElement\r\n    form: HTMLFormElement\r\n    resultContainer: HTMLDivElement\r\n    notFound: HTMLDivElement\r\n}\r\nconst domElems:DomObj = {\r\n    body: document.querySelector(\"body\")!,\r\n    logoUse: document.querySelector(\".header__logo use\")!,\r\n    loader: document.querySelector(\".loader\")!,\r\n    inputErrMessage: document.querySelector(\".hero__search-input-err\")!,\r\n    // Theme selector\r\n    dayNightCheckbox: document.querySelector(\".header__toggle-checkbox\")!,\r\n    // Font selector\r\n    fontSelectorBackdrop: document.querySelector(\".header__font-selector-backdrop\")!,\r\n    fontsSelectWindow: document.querySelector(\".header__font-selector-list\")!,\r\n    fontOpenBtn: document.querySelector(\".header__font-selector-open-btn\")!,\r\n    selectedFont: document.querySelector(\".header__selected-font-para\")!,\r\n    // Form\r\n    form: document.querySelector(\".hero__search-form\")!,\r\n    // Result\r\n    resultContainer: document.querySelector(\".result__container\")!,\r\n    notFound: document.querySelector(\".result__not-found-container\")!,\r\n}\r\nexport const delay = (ms: number) => { return new Promise(resolve => setTimeout(resolve, ms)) }\r\n\r\nexport const {\r\n    body,\r\n    logoUse,\r\n    loader,\r\n    inputErrMessage,\r\n    dayNightCheckbox,\r\n    fontSelectorBackdrop,\r\n    fontsSelectWindow,\r\n    fontOpenBtn,\r\n    selectedFont,\r\n    form,\r\n    resultContainer,\r\n    notFound\r\n} = domElems\r\n","import { body, dayNightCheckbox, fontSelectorBackdrop, fontsSelectWindow, fontOpenBtn, selectedFont } from \"./dom-elements\";\r\n\r\nif (window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n    dayNightCheckbox.setAttribute(\"checked\", \"\")\r\n    body.classList.remove(\"body_light\")\r\n    body.classList.add(\"body_dark\")\r\n}\r\n\r\ndayNightCheckbox.addEventListener(\"click\", themeCheck)\r\nfontOpenBtn.addEventListener(\"click\", fontsOpenClose)\r\nfontSelectorBackdrop.addEventListener(\"click\", fontsOpenClose)\r\nfontsSelectWindow.addEventListener(\"click\", selectFont)\r\n\r\nfunction themeCheck(): void {\r\n    if (dayNightCheckbox.checked) {\r\n        body.classList.remove(\"body_light\")\r\n        body.classList.add(\"body_dark\")\r\n    } else {\r\n        body.classList.remove(\"body_dark\")\r\n        body.classList.add(\"body_light\")\r\n    }\r\n}\r\n\r\nfunction fontsOpenClose(): void {\r\n    if (fontsSelectWindow.classList.contains(\"header__font-selector-list_open\")) {\r\n        fontsSelectWindow.classList.remove(\"header__font-selector-list_open\")\r\n        fontSelectorBackdrop.classList.add(\"disabled\")\r\n        window.removeEventListener(\"scroll\", fontsOpenClose)\r\n    } else {\r\n        fontsSelectWindow.classList.add(\"header__font-selector-list_open\")\r\n        fontSelectorBackdrop.classList.remove(\"disabled\")\r\n        window.addEventListener(\"scroll\", fontsOpenClose)\r\n    }\r\n}\r\n\r\nfunction selectFont(e: Event): void {\r\n    const target = e.target as HTMLUListElement | HTMLLIElement | HTMLButtonElement\r\n    if (target.nodeName === \"BUTTON\") {\r\n        const sansSerif: string = \"body_sans-serif\"\r\n        const serif: string = \"body_serif\"\r\n        const mono: string = \"body_mono\"\r\n\r\n        if (target.classList.contains(\"header__sans-serif-btn\")) {\r\n            body.classList.add(sansSerif)\r\n            body.classList.remove(serif)\r\n            body.classList.remove(mono)\r\n            if (selectedFont) selectedFont.textContent = \"Sans Serif\"\r\n        } else if (target.classList.contains(\"header__serif-btn\")) {\r\n            body.classList.add(serif)\r\n            body.classList.remove(sansSerif)\r\n            body.classList.remove(mono)\r\n            if (selectedFont) selectedFont.textContent = \"Serif\"\r\n        } else {\r\n            body.classList.add(mono)\r\n            body.classList.remove(sansSerif)\r\n            body.classList.remove(serif)\r\n            if (selectedFont) selectedFont.textContent = \"Mono\"\r\n        }\r\n    }\r\n}","import { APIResponseData } from \".\"\r\nimport { logoUse } from \"./dom-elements\"\r\nexport default buildResultSection\r\nexport let resultAudio: HTMLAudioElement | null\r\nconst spriteHref: string = logoUse.getAttribute(\"href\")!.slice(0, logoUse.getAttribute(\"href\")?.indexOf(\"#\"))\r\n\r\nfunction buildResultSection(data: APIResponseData): string {\r\n    const { word, phonetic, phonetics, meanings, sourceUrls} = data\r\n    const resultDomArr: string[] = []\r\n\r\n    resultDomArr.push(buildResultMain(word, phonetic, searchAudioUrl(phonetics)))\r\n    meanings.forEach(meaning => resultDomArr.push(buildMeaning(meaning)))\r\n    resultDomArr.push('<div class=\"result__end-spliter\"></div>')\r\n    resultDomArr.push(buildSource(sourceUrls))\r\n\r\n    return resultDomArr.join(\"\")\r\n}\r\n\r\nfunction searchAudioUrl(phonetics: Phonetic[]): string | undefined {\r\n    return phonetics.find((item: Phonetic): Phonetic | undefined => { if (item.audio.length > 0) return item })?.audio\r\n}\r\n\r\nfunction buildResultMain(word: string, phonetic: string, audio: string | undefined): string {\r\n    let result:string = \"\"\r\n    if (audio) {\r\n        result += `<div class=\"result__result-wrapper\">\r\n            <div class=\"result__word-wrapper\">\r\n                <h1 class=\"result__main-title\">${word}</h1>\r\n                <p class=\"result__transcription\">${phonetic}</p>\r\n            </div>\r\n            <button class=\"result__play-btn button\" type=\"button\">\r\n                <svg class=\"result__play-icon\">\r\n                    <use href=\"${spriteHref}#icon-play\" />\r\n                </svg>\r\n            </button>\r\n        </div>`\r\n        resultAudio = new Audio(audio)\r\n    } else {\r\n        result += `<div class=\"result__result-wrapper\">\r\n            <div class=\"result__word-wrapper\">\r\n                <h1 class=\"result__main-title\">${word}</h1>\r\n                <p class=\"result__transcription\">${phonetic}</p>\r\n            </div>\r\n        </div>`\r\n        resultAudio = null\r\n    }\r\n    return result\r\n}\r\n\r\nfunction buildMeaning(meaning: Meaning): string {\r\n    const { partOfSpeech, definitions, synonyms, antonyms } = meaning\r\n    let final: string = `<div class=\"result__wrapper\">\r\n            <div class=\"result__title-wrapper\">\r\n                <h2 class=\"result__title\">${partOfSpeech}</h2>\r\n                <div class=\"result__spliter\"></div>\r\n            </div>\r\n            <h3 class=\"result__meaning-title\">Meaning</h3>\r\n            <ul class=\"result__list\">`\r\n\r\n    final += buildMeanItems(definitions) + \"</ul>\"\r\n    final += buildMeanSynonymsAntonyms(synonyms, antonyms)\r\n    return final  + '</div>'\r\n}\r\n\r\nfunction buildMeanItems(defins: Meaning[\"definitions\"]): string {\r\n    const items: string[] = []\r\n    defins.forEach(defin => {\r\n        if (defin.example) {\r\n            items.push(`<li class=\"result__item\">\r\n                <div class=\"result__item-circle\"></div>\r\n                <p class=\"result__item-para\">${defin.definition}</p>\r\n                <p class=\"result__example\">“${defin.example}”</p>\r\n            </li>`)\r\n        } else {\r\n            items.push(`<li class=\"result__item\">\r\n                <div class=\"result__item-circle\"></div>\r\n                <p class=\"result__item-para\">${defin.definition}</p>\r\n            </li>`)\r\n        }\r\n    })\r\n    return items.join(\"\")\r\n}\r\n\r\nfunction buildMeanSynonymsAntonyms(synonyms: Meaning[\"synonyms\"], antonyms: Meaning[\"antonyms\"]): string | void {\r\n    let result: string = ``\r\n    if (synonyms.length > 0) {\r\n        result += `<div class=\"result__synonyms-wrapper\">\r\n            <h3 class=\"result__synonyms\">Synonyms</h3>\r\n            <ul class=\"result__synonyms-list\">`\r\n    \r\n        synonyms.forEach(synonym => {\r\n            result += `<li class=\"result__synonyms-item\">\r\n                    <p class=\"result__synonyms-para\">${synonym}</p>\r\n                </li>`\r\n        })\r\n        result += \"</ul></div>\"\r\n    }\r\n    if (antonyms.length > 0) {\r\n        result += `<div class=\"result__antonyms-wrapper\">\r\n            <h3 class=\"result__antonyms\">Antonyms</h3>\r\n            <ul class=\"result__antonyms-list\">`\r\n    \r\n        antonyms.forEach(antonym => {\r\n            result += `<li class=\"result__antonyms-item\">\r\n                    <p class=\"result__antonyms-para\">${antonym}</p>\r\n                </li>`\r\n        })\r\n        result += \"</ul></div>\"\r\n    }\r\n    return result\r\n}\r\n\r\n\r\n\r\n\r\nfunction buildSource(srcs: string[]) {\r\n    let result:string = ''\r\n    if (srcs.length > 0) {\r\n        result += `<div class=\"result__src-wrapper\">\r\n            <h2 class=\"result__src-title\">Source</h2>\r\n            <ul class=\"result__src-list\">`\r\n        srcs.forEach(src => {\r\n            result += `<li class=\"result__src-item\">\r\n                    <a class=\"result__src-link\" href=\"${src}\" target=\"_blank\">${src}\r\n                        <svg class=\"result__src-icon\">\r\n                            <use href=\"${spriteHref}#icon-new-window\"></use>\r\n                        </svg>\r\n                    </a>\r\n                </li>`\r\n        })\r\n    }\r\n    return result\r\n}\r\n\r\ninterface Phonetic {\r\n    text: string\r\n    audio: string\r\n    sourceUrl?: string\r\n    license?: {\r\n        name: string\r\n        url: string\r\n    }\r\n}\r\n\r\ninterface Meaning {\r\n    partOfSpeech: string,\r\n    definitions: {\r\n        definition: string,\r\n        synonyms: string[],\r\n        antonyms: string[],\r\n        example?: string\r\n    }[],\r\n    synonyms: string[]\r\n    antonyms: string[]\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\"\r\nimport buildResultSection from \"./result-builder\"\r\nimport { form, resultContainer, inputErrMessage, notFound, loader, delay } from \"./dom-elements\"\r\nimport { resultAudio } from \"./result-builder\"\r\n\r\nconst searchInput = form.elements[0] as HTMLInputElement\r\n\r\nform?.addEventListener(\"submit\", async (e: Event): Promise<void> => {\r\n  e.preventDefault()\r\n  if (searchInput.value.trim().length > 0) {\r\n    resultContainer.innerHTML = \"\"\r\n    loader.classList.remove(\"disabled\")\r\n    notFound.classList.add(\"disabled\")\r\n    await createResultDom()\r\n    loader.classList.add(\"disabled\")\r\n  } else {\r\n    searchInput.classList.add(\"hero__search-input_error\")\r\n    inputErrMessage.style.opacity = \"1\"\r\n    searchInput.value = \"\"\r\n  }\r\n})\r\n\r\nsearchInput.addEventListener(\"input\", () => {\r\n  if (searchInput.value.trim().length > 0) {\r\n    searchInput.classList.remove(\"hero__search-input_error\")\r\n    inputErrMessage.style.opacity = \"\"\r\n  }\r\n})\r\n\r\nasync function createResultDom(): Promise<void> {\r\n  const data: APIResponseData[] | void = await fetchData(searchInput.value)\r\n  if (data) {\r\n    resultContainer.innerHTML = buildResultSection(data[0])\r\n    addSynonymsCopy()\r\n    if (resultAudio) {\r\n      const playBtn: HTMLButtonElement = document.querySelector('.result__play-btn')!\r\n      playBtn.addEventListener(\"click\", () => { resultAudio?.play() })\r\n    }\r\n  } else {\r\n    notFound.classList.remove(\"disabled\")\r\n  }\r\n\r\n}\r\n\r\nasync function fetchData(word: string) {\r\n  return axios(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\r\n    .then((res: AxiosResponse): APIResponseData[] => {\r\n        console.log(res.data)\r\n        return res.data\r\n    })\r\n    .catch((err: AxiosError): void => console.log(err))\r\n}\r\n\r\nfunction addSynonymsCopy(): void {\r\n  const synonymsLists: NodeListOf<HTMLUListElement> = document.querySelectorAll(\".result__synonyms-list\")!\r\n\r\n  synonymsLists.forEach((list: HTMLUListElement) : void => {\r\n    list.addEventListener(\"click\", async (e: MouseEvent): Promise<void> => {\r\n      const target = e.target! as HTMLElement\r\n      if (target.nodeName === \"P\") {\r\n        navigator.clipboard.writeText(target.innerText)\r\n        target.classList.add(\"result__copyed\")\r\n        await delay(3000)\r\n        target.classList.remove(\"result__copyed\")\r\n      }\r\n    })\r\n  })\r\n\r\n}\r\nexport interface APIResponseData {\r\n  word: string,\r\n  phonetic: string,\r\n  phonetics: {\r\n    text: string,\r\n    audio: string,\r\n    sourceUrl?: string,\r\n    license?: {\r\n      name: string,\r\n      url: string\r\n    }\r\n  }[]\r\n  meanings: {\r\n    partOfSpeech: string,\r\n    definitions: {\r\n      definition: string,\r\n      synonyms: string[],\r\n      antonyms: string[],\r\n      example?: string\r\n    }[],\r\n    synonyms: string[]\r\n    antonyms: string[]\r\n  }[]\r\n  license: {\r\n    name: string,\r\n    url: string\r\n  },\r\n  sourceUrls: string[]\r\n}  "],"names":["domElems","delay","ms","resolve","body","logoUse","loader","inputErrMessage","dayNightCheckbox","fontSelectorBackdrop","fontsSelectWindow","fontOpenBtn","selectedFont","form","resultContainer","notFound","themeCheck","fontsOpenClose","selectFont","e","target","sansSerif","serif","mono","resultAudio","spriteHref","_a","buildResultSection","data","word","phonetic","phonetics","meanings","sourceUrls","resultDomArr","buildResultMain","searchAudioUrl","meaning","buildMeaning","buildSource","item","audio","result","partOfSpeech","definitions","synonyms","antonyms","final","buildMeanItems","buildMeanSynonymsAntonyms","defins","items","defin","synonym","antonym","srcs","src","searchInput","createResultDom","fetchData","addSynonymsCopy","axios","res","err","list"],"mappings":"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"}